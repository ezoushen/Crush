{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Model-Declaration","level":2,"type":"heading","text":"Model Declaration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Crush, a schema is defined by subclassing "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/EntityMap"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["class CurrentEntityMap: EntityMap {","    @Abstract(inheritance: .singleTable)","    var abstractEntity = AbstractEntity()    ","","    @Configuration(\"CONF\")","    @Configuration(\"ANOTHER CONF\")","    @Abstract(inheritance: .singleTable)","    @Abstract(inheritance: .multiTable) \/\/ This modifier will be ignored    ","    var embeddedEntity = EmbeddedEntity()","","    @Concrete","    @Configuration(\"CONF\")","    var concreteEntity = ConcreteEntity()","}","\/\/ \"CONF\" includes EmbeddedEntity and ConcreteEntity.","\/\/ \"ANOTHER CONF\" includes noly EmbeddedEntity."]},{"anchor":"Lightweight-Migration","level":2,"type":"heading","text":"Lightweight Migration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Same as Core Data, Crush supports lightweight migration. It infers the minimum changes between two version of models and apply changes to the persistent store automatically."}]},{"type":"codeListing","syntax":"swift","code":["try DataContainer.load(","    ...","    migrationPolicy: .lightweight",")"]},{"anchor":"Heavyweight-Migration","level":2,"type":"heading","text":"Heavyweight Migration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Also, same as Core Data, Crush supports heavyweight migration including"}]},{"anchor":"Ad-Hoc","level":3,"type":"heading","text":"Ad-Hoc"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You have the ability to define how changes should be applied to the store for manual migration. Similar to CoreData, the method "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/adHoc(migrations:lightWeightBackup:forceValidateModel:)"},{"type":"text","text":" facilitates this process by allowing you to outline a migration plan that maps out the transition between two different versions."}]},{"type":"codeListing","syntax":"swift","code":["try DataContainer.load(","    ...","    migrationPolicy: .adHoc(","        migrations: [","            AdHocMigration(\"OLD_SCHEMA\") {","                AddEntity(\"NewEntity\") {","                    AddAttribute(\"newProperty\", attributeType: .stringAttributeType)","                }","            }","        ]","    )",")"]},{"anchor":"Incremental","level":3,"type":"heading","text":"Incremental"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The method "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/incremental(_:lightWeightBackup:forceValidateModel:)"},{"type":"text","text":" enables users to manage changes exclusively between adjacent versions in a single direction (from the old version to the new version). This approach involves updating the persistent store incrementally as it progresses from one version to the next."}]},{"type":"codeListing","syntax":"swift","code":["try DataContainer.load(","    migrationPilocy: .incremental(","        MigrationChain {","            ModelMigration(\"V1\") {","                AddEntity(\"NewEntity\") {","                    AddAttribute(\"newProperty\", attributeType: .stringAttributeType)","                    AddAttribute(\"anotherProperty\", attributeType: .stringAttributeType)","                }","            }","            ModelMigration(\"V2\") {","                UpdateEntity(\"NewEntity\") {","                    RemoveAttribute(\"anotherProperty\")","                }","            }","        }","    )",")"]},{"anchor":"Composite","level":3,"type":"heading","text":"Composite"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The method "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/incremental(_:lightWeightBackup:forceValidateModel:)"},{"type":"text","text":" offers significant flexibility and results in code that is easy to maintain. However, when the persistent store schema version significantly lags behind the current schema version, this method might become time-consuming. To address this situation, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/composite(adHoc:chain:lightWeightBackup:forceValidateModel:)"},{"type":"text","text":" method presents an approach for conducting ad hoc migration while executing the incremental migration process."}]},{"type":"codeListing","syntax":"swift","code":["try DataContainer.load(","    migrationPilocy: .composite(","        adHoc: [","            AdHocMigration(\"V1ToV2\") {","                UpdateEntity(\"NewEntity\") {","                    RemoveAttribute(\"anotherProperty\")","                }","            }","        ],","        chain: MigrationChain {","            ModelMigration(\"V1\") {","                AddEntity(\"NewEntity\") {","                    AddAttribute(\"newProperty\", attributeType: .stringAttributeType)","                    AddAttribute(\"anotherProperty\", attributeType: .stringAttributeType)","                }","            }","            ModelMigration(\"V2\") {","                UpdateEntity(\"NewEntity\") {","                    RemoveAttribute(\"anotherProperty\")","                }","            }","        }","    )",")"]},{"anchor":"Custom-migration","level":3,"type":"heading","text":"Custom migration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Subclass "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy"},{"type":"text","text":" to define your own migration plan."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The methods that "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be implemented by a subclass of "},{"type":"codeVoice","code":"MigrationPolicy"},{"type":"text","text":" are:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"validateModel(_:in:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"configureStoreDescription(_:)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"resolveIncompatible(dataModel:in:)"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/crush\/versioningandmigration"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Crush\/documentation\/Crush\/VersioningAndMigration","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article introduces how to manage model schema and data migration in "},{"type":"codeVoice","code":"Crush"},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Versioning and Migration","role":"article","modules":[{"name":"Crush"}]},"hierarchy":{"paths":[["doc:\/\/Crush\/documentation\/Crush"]]},"seeAlsoSections":[{"title":"Managing data schema","identifiers":["doc:\/\/Crush\/documentation\/Crush\/ManageProperties","doc:\/\/Crush\/documentation\/Crush\/PropertyModifier"],"generated":true}],"references":{"doc://Crush/documentation/Crush/MigrationPolicy/incremental(_:lightWeightBackup:forceValidateModel:)":{"role":"symbol","title":"incremental(_:lightWeightBackup:forceValidateModel:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"incremental"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MigrationChain","preciseIdentifier":"s:5Crush14MigrationChainC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"lightWeightBackup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forceValidateModel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"MigrationPolicy","preciseIdentifier":"s:5Crush15MigrationPolicyC"}],"abstract":[{"type":"text","text":"Returns a migration policy to migrate the persistent store changes incrementally."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/incremental(_:lightWeightBackup:forceValidateModel:)","kind":"symbol","type":"topic","url":"\/documentation\/crush\/migrationpolicy\/incremental(_:lightweightbackup:forcevalidatemodel:)"},"doc://Crush/documentation/Crush/MigrationPolicy/adHoc(migrations:lightWeightBackup:forceValidateModel:)":{"role":"symbol","title":"adHoc(migrations:lightWeightBackup:forceValidateModel:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"adHoc"},{"kind":"text","text":"("},{"kind":"externalParam","text":"migrations"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AdHocMigration","preciseIdentifier":"s:5Crush14AdHocMigrationV"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lightWeightBackup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forceValidateModel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"MigrationPolicy","preciseIdentifier":"s:5Crush15MigrationPolicyC"}],"abstract":[{"type":"text","text":"Returns a migration policy to migrate the persistent store from one specific version to another."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/adHoc(migrations:lightWeightBackup:forceValidateModel:)","kind":"symbol","type":"topic","url":"\/documentation\/crush\/migrationpolicy\/adhoc(migrations:lightweightbackup:forcevalidatemodel:)"},"doc://Crush/documentation/Crush/MigrationPolicy":{"role":"symbol","title":"MigrationPolicy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MigrationPolicy"}],"abstract":[{"type":"text","text":"A policy for migrating data models in a Core Data persistent store."},{"type":"text","text":" "},{"type":"codeVoice","code":"MigrationPolicy"},{"type":"text","text":" is an abstract class that provides a set of methods and properties for managing migrations of data"},{"type":"text","text":" "},{"type":"text","text":"models in a Core Data persistent store. It contains a set of abstract methods that must be implemented by its subclasses to define a specific migration policy."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MigrationPolicy"}],"url":"\/documentation\/crush\/migrationpolicy"},"doc://Crush/documentation/Crush/PropertyModifier":{"role":"article","title":"Property Modifier","abstract":[{"type":"text","text":"Crush provides multiple ways to modify the properties of an entity. This helps you separate concerns and configure a property by composition."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/PropertyModifier","kind":"article","type":"topic","url":"\/documentation\/crush\/propertymodifier"},"doc://Crush/documentation/Crush/EntityMap":{"role":"symbol","title":"EntityMap","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityMap"}],"abstract":[{"type":"text","text":"Declare a map that describes relationships between entities."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/EntityMap","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityMap"}],"url":"\/documentation\/crush\/entitymap"},"doc://Crush/documentation/Crush/ManageProperties":{"role":"article","title":"Manage Properties","abstract":[{"type":"text","text":"Configure properties within an entity in a declarative way."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/ManageProperties","kind":"article","type":"topic","url":"\/documentation\/crush\/manageproperties"},"doc://Crush/documentation/Crush":{"role":"collection","title":"Crush","abstract":[{"type":"text","text":"Enhance the development experience with CoreData by providing greater type-safety and intuitive functionality"}],"identifier":"doc:\/\/Crush\/documentation\/Crush","kind":"symbol","type":"topic","url":"\/documentation\/crush"},"doc://Crush/documentation/Crush/MigrationPolicy/composite(adHoc:chain:lightWeightBackup:forceValidateModel:)":{"role":"symbol","title":"composite(adHoc:chain:lightWeightBackup:forceValidateModel:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"composite"},{"kind":"text","text":"("},{"kind":"externalParam","text":"adHoc"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"AdHocMigration","preciseIdentifier":"s:5Crush14AdHocMigrationV"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"chain"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MigrationChain","preciseIdentifier":"s:5Crush14MigrationChainC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"lightWeightBackup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forceValidateModel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"MigrationPolicy","preciseIdentifier":"s:5Crush15MigrationPolicyC"}],"abstract":[{"type":"text","text":"If no ad-hoc migration model matched, try migrate the persistent store by incremental changes"}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/MigrationPolicy\/composite(adHoc:chain:lightWeightBackup:forceValidateModel:)","kind":"symbol","type":"topic","url":"\/documentation\/crush\/migrationpolicy\/composite(adhoc:chain:lightweightbackup:forcevalidatemodel:)"}}}