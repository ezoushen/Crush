{"primaryContentSections":[{"kind":"content","content":[{"anchor":"What-is-Crush","level":2,"type":"heading","text":"What is Crush"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Crush"},{"type":"text","text":" is a framework that facilitates interacting with CoreData features in a Swifty and type-safe manner. It differs from vanilla CoreData in several ways, such as schema declaration, concurrency management, more powerful predicate builder (thanks to operator overloading), and data migration."}]},{"anchor":"Schema-declaration","level":3,"type":"heading","text":"Schema declaration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In traditional CoreData, data models are managed through "},{"type":"codeVoice","code":".xcdatamodel"},{"type":"text","text":" files, which can be difficult to maintain across multiple Xcode versions and collaborations. Managing data models through code can offer greater flexibility and ease of maintenance."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’re some simple examples in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/QuickStart"},{"type":"text","text":"."}]},{"anchor":"Concurrency-management","level":3,"type":"heading","text":"Concurrency management"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":", direct data access in "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":" is not thread-safe. Thus, in "},{"type":"codeVoice","code":"Crush"},{"type":"text","text":", data mutation is allowed only in limited contexts. To achieve this, two object types are introduced: "},{"type":"codeVoice","code":"ManagedObject"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ReadOnly"},{"type":"text","text":"."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/ManagedObject"},{"type":"text","text":": A subclass of "},{"type":"codeVoice","code":"NSManagedObject"},{"type":"text","text":" that is responsible for calling "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":" APIs."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/ReadOnly"},{"type":"text","text":": A class responsible for thread-safe data access of the managed object."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With these two classes, we can guarantee thread-safe data access from any "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/ReadOnly"},{"type":"text","text":" object (possibly reentrant safe). All managed objects should be used only in the callback block of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session\/sync(name:block:)-831hn"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session\/async(name:block:completion:)"},{"type":"text","text":" (and other sync and async methods provided in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":")."}]},{"type":"codeListing","syntax":"swift","code":["let myEntity: ReadOnly<MyEntity>","try dataContainer.startSession().sync { context in","  let mutableEntity = context.edit(myEntity)","  \/\/ Do something","  mutableEntity.integerValue = 10","  try context.commit()","}","print(myEntity.integerValue) \/\/ 10"]},{"anchor":"Predicate-Builder","level":3,"type":"heading","text":"Predicate Builder"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"Crush"},{"type":"text","text":", predicates are built using operator overloading. This allows for a more concise, type-safe, error-prone and readable syntax."}]},{"type":"codeListing","syntax":"swift","code":["container","    .fetch(MyEntity.self)","    .where(\\.stringValue <> \"some string\") \/\/ stringValue CONTAINS \"some string\"","    .andWhere(\\.intValue > 10)             \/\/ AND intValue > 10","    .exec()"]},{"anchor":"Data-Migration","level":3,"type":"heading","text":"Data Migration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Based on the data migration provided by "},{"type":"codeVoice","code":"CoreData"},{"type":"text","text":", "},{"type":"codeVoice","code":"Crush"},{"type":"text","text":" offers a more flexible approach to data migration, including:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lightweight migration"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Heavyweight migration:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ad-Hoc (version-to-version)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Incremental (migration chain)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Hybrid (uses Ad-Hoc if version matched, otherwise iterates through the provided chain)"}]}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can choose your own migration policy through "},{"type":"codeVoice","code":"migrationPolicy"},{"type":"text","text":" of factory method of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/DataContainer"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/crush\/concepts"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Crush\/documentation\/Crush\/Concepts","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Basic concepts behind "},{"type":"codeVoice","code":"Crush"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Concepts","role":"article","modules":[{"name":"Crush"}]},"hierarchy":{"paths":[["doc:\/\/Crush\/documentation\/Crush"]]},"seeAlsoSections":[{"title":"Getting started","identifiers":["doc:\/\/Crush\/documentation\/Crush\/QuickStart","doc:\/\/Crush\/documentation\/Crush\/CRUDOperations"],"generated":true}],"references":{"doc://Crush/documentation/Crush/Session/async(name:block:completion:)":{"role":"symbol","title":"async(name:block:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"async"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"block"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SessionContext","preciseIdentifier":"s:5Crush14SessionContextC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Asynchronously performs a block on the session’s context, wrapped in an undoable and signed transaction."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session\/async(name:block:completion:)","kind":"symbol","type":"topic","url":"\/documentation\/crush\/session\/async(name:block:completion:)"},"doc://Crush/documentation/Crush/ManagedObject":{"role":"symbol","title":"ManagedObject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedObject"}],"abstract":[{"type":"text","text":"A class that is responsible for data access."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/ManagedObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ManagedObject"}],"url":"\/documentation\/crush\/managedobject"},"doc://Crush/documentation/Crush/Session":{"role":"symbol","title":"Session","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Session"}],"abstract":[],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Session"}],"url":"\/documentation\/crush\/session"},"doc://Crush/documentation/Crush/QuickStart":{"role":"article","title":"Quick Start","abstract":[{"type":"text","text":"This guide aims to provide an understanding of the foundational concepts of the framework before exploring its comprehensive feature set."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/QuickStart","kind":"article","type":"topic","url":"\/documentation\/crush\/quickstart"},"doc://Crush/documentation/Crush/DataContainer":{"role":"symbol","title":"DataContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataContainer"}],"abstract":[{"type":"text","text":"A well-defined CoreData wrapper."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/DataContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataContainer"}],"url":"\/documentation\/crush\/datacontainer"},"doc://Crush/documentation/Crush/Session/sync(name:block:)-831hn":{"role":"symbol","title":"sync(name:block:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sync"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Property"},{"kind":"text","text":">("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"block"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"SessionContext","preciseIdentifier":"s:5Crush14SessionContextC"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Property"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Property"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Safe"}],"abstract":[{"type":"text","text":"Synchronously performs a block on the session’s context, wrapped in an undoable and signed transaction."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session\/sync(name:block:)-831hn","kind":"symbol","type":"topic","url":"\/documentation\/crush\/session\/sync(name:block:)-831hn"},"doc://Crush/documentation/Crush":{"role":"collection","title":"Crush","abstract":[{"type":"text","text":"Enhance the development experience with CoreData by providing greater type-safety and intuitive functionality"}],"identifier":"doc:\/\/Crush\/documentation\/Crush","kind":"symbol","type":"topic","url":"\/documentation\/crush"},"doc://Crush/documentation/Crush/ReadOnly":{"role":"symbol","title":"ReadOnly","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadOnly"}],"abstract":[{"type":"text","text":"A class responsible for thread-safe data access of the managed object."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/ReadOnly","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReadOnly"}],"url":"\/documentation\/crush\/readonly"},"doc://Crush/documentation/Crush/CRUDOperations":{"role":"article","title":"CRUD Operations","abstract":[{"type":"text","text":"Simple example of CRUD Operations in Crush"}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/CRUDOperations","kind":"article","type":"topic","url":"\/documentation\/crush\/crudoperations"}}}