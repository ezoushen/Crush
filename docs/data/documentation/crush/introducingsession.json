{"primaryContentSections":[{"kind":"content","content":[{"anchor":"What-is-Session","level":2,"type":"heading","text":"What is Session"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":" is a lightweight object that represents a single unit of work with the database. It provides a collection of methods that allow you to create, fetch, and delete objects in the database. More importantly, it manages the lifecycle of the "},{"type":"codeVoice","code":"NSManagedObjectContext"},{"type":"text","text":" and ensures that all data mutations are thread-safe."}]},{"anchor":"Structure-of-a-Session","level":3,"type":"heading","text":"Structure of a Session"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A session is composed of three "},{"type":"codeVoice","code":"NSManagedObjectContext"},{"type":"text","text":"s, each with a different purpose:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Execution context"}]},{"type":"text","text":": This context is responsible for performing data mutations."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UI context"}]},{"type":"text","text":": This context is responsible for presenting data on the main thread."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Writer context"}]},{"type":"text","text":": This context is responsible for pushing changes to the persistent store coordinator."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By separating the execution context and the UI context, we can ensure that the main thread is free from direct communication with the database. This separation of concerns allows for a smoother user experience and helps prevent issues such as UI lag or freezes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You donâ€™t need to worry about the lifecycle of these contexts. The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":" will automatically create and dispose of them for you, and also, data mutation methods are exposed through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/SessionContext"},{"type":"text","text":" APIs. The only decision to make is using sync or async methods."}]},{"anchor":"Data-isolation","level":3,"type":"heading","text":"Data isolation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":" is isolated from other "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":"s. This means that changes made in one session will not be visible to other sessions until they are committed. This allows you to perform multiple operations in parallel without worrying about data conflicts. (But still, you have to be aware of the data conflicts between different "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":"s, and make sure they will be handled properly by merge policy or the error handler)"}]},{"anchor":"How-to-use-Session","level":2,"type":"heading","text":"How to use Session"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And by using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":", you can easily perform CRUD operations on the database:"}]},{"type":"codeListing","syntax":"swift","code":["let session = try dataContainer.startSession()","try session.sync { context in","  let entity = try context.create(MyEntity.self)","  entity.stringValue = \"Hello world!\"","  try context.commit()","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/crush\/introducingsession"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Crush\/documentation\/Crush\/IntroducingSession","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article explains what a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"},{"type":"text","text":" is and how to use it."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Introducing Session","role":"article","modules":[{"name":"Crush"}]},"hierarchy":{"paths":[["doc:\/\/Crush\/documentation\/Crush"]]},"seeAlsoSections":[{"title":"Working with Session","identifiers":["doc:\/\/Crush\/documentation\/Crush\/TypesOfSessions","doc:\/\/Crush\/documentation\/Crush\/SigningSessionBlock","doc:\/\/Crush\/documentation\/Crush\/UndoRedoInSession"],"generated":true}],"references":{"doc://Crush/documentation/Crush/TypesOfSessions":{"role":"article","title":"Types of Sessions","abstract":[{"type":"text","text":"Introduce provided session types"}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/TypesOfSessions","kind":"article","type":"topic","url":"\/documentation\/crush\/typesofsessions"},"doc://Crush/documentation/Crush/SessionContext":{"role":"symbol","title":"SessionContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SessionContext"}],"abstract":[{"type":"text","text":"A class that represents a session context. Wrapping structured managed object contexts and providing multiple essential methods."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/SessionContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SessionContext"}],"url":"\/documentation\/crush\/sessioncontext"},"doc://Crush/documentation/Crush/UndoRedoInSession":{"role":"article","title":"Undo\/Redo In Session","abstract":[{"type":"text","text":"Core Data supports undo\/redo by default. In Crush, the redo\/undo stack is managed through "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session"}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/UndoRedoInSession","kind":"article","type":"topic","url":"\/documentation\/crush\/undoredoinsession"},"doc://Crush/documentation/Crush/SigningSessionBlock":{"role":"article","title":"Signing Execution Block in Session","abstract":[{"type":"text","text":"Enable signing "},{"type":"codeVoice","code":"transactionAuthor"},{"type":"text","text":" for the code block"}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/SigningSessionBlock","kind":"article","type":"topic","url":"\/documentation\/crush\/signingsessionblock"},"doc://Crush/documentation/Crush":{"role":"collection","title":"Crush","abstract":[{"type":"text","text":"Enhance the development experience with CoreData by providing greater type-safety and intuitive functionality"}],"identifier":"doc:\/\/Crush\/documentation\/Crush","kind":"symbol","type":"topic","url":"\/documentation\/crush"},"doc://Crush/documentation/Crush/Session":{"role":"symbol","title":"Session","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Session"}],"abstract":[],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Session","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Session"}],"url":"\/documentation\/crush\/session"}}}