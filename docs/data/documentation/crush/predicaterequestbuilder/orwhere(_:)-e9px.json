{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"orWhere"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"s predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new predicate that needs to be combined with the existing predicate using the "},{"type":"codeVoice","code":"OR"},{"type":"text","text":" operation."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If there is no previous predicate, then the provided predicate is simply set as the current predicate."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/crush\/predicaterequestbuilder\/orwhere(_:)-e9px"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Crush\/documentation\/Crush\/PredicateRequestBuilder\/orWhere(_:)-e9px","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A method that adds a new predicate to the current builder by logically combining it with the previous predicate using "},{"type":"codeVoice","code":"OR"},{"type":"text","text":" operation."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"orWhere"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"orWhere(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:5Crush23PredicateRequestBuilderC7orWhereyACyxGXDSo11NSPredicateCF","modules":[{"name":"Crush"}]},"hierarchy":{"paths":[["doc:\/\/Crush\/documentation\/Crush","doc:\/\/Crush\/documentation\/Crush\/PredicateRequestBuilder"]]},"references":{"doc://Crush/documentation/Crush/PredicateRequestBuilder/orWhere(_:)-e9px":{"role":"symbol","title":"orWhere(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"orWhere"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"NSPredicate","preciseIdentifier":"c:objc(cs)NSPredicate"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"A method that adds a new predicate to the current builder by logically combining it with the previous predicate using "},{"type":"codeVoice","code":"OR"},{"type":"text","text":" operation."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/PredicateRequestBuilder\/orWhere(_:)-e9px","kind":"symbol","type":"topic","url":"\/documentation\/crush\/predicaterequestbuilder\/orwhere(_:)-e9px"},"doc://Crush/documentation/Crush/PredicateRequestBuilder":{"role":"symbol","title":"PredicateRequestBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PredicateRequestBuilder"}],"abstract":[{"type":"text","text":"A builder class for constructing "},{"type":"codeVoice","code":"NSPersistentStoreRequest"},{"type":"text","text":" instances with a predicate."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/PredicateRequestBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PredicateRequestBuilder"}],"url":"\/documentation\/crush\/predicaterequestbuilder"},"doc://Crush/documentation/Crush":{"role":"collection","title":"Crush","abstract":[{"type":"text","text":"Enhance the development experience with CoreData by providing greater type-safety and intuitive functionality"}],"identifier":"doc:\/\/Crush\/documentation\/Crush","kind":"symbol","type":"topic","url":"\/documentation\/crush"}}}