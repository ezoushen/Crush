{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Attributes","level":2,"type":"heading","text":"Attributes"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can retreive all the types supported by CoreData from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Value"},{"type":"text","text":". You can declared an attribute as example below."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ This declare a bool attribute named \"PROPERTY_NAME\"","let boolValue = Value.Bool(\"PROPERTY_NAME\")"]},{"anchor":"Relationships","level":2,"type":"heading","text":"Relationships"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can retreive all the types supported by CoreData from "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Relation"},{"type":"text","text":". You can declared a relationship as example below."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To-One Relationship"}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ This declare a to-one relationship named \"PROPERTY_NAME\" to \"TARGET_ENTITY\"","let toOneRelationship = Relation.ToOne<TargetEntity>(\"PROPERTY_NAME\")"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To-Many Relationship"}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ This declare a to-many relationship named \"PROPERTY_NAME\" to \"TARGET_ENTITY\"","let toManyRelationship = Relation.ToMany<TargetEntity>(\"PROPERTY_NAME\")"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To-Many Ordered Relationship"}]}]}]},{"type":"codeListing","syntax":"swift","code":["\/\/ This declare a to-many ordered relationship named \"PROPERTY_NAME\" to \"TARGET_ENTITY\"","let toManyOrderedRelationship = Relation.ToManyOrdered<TargetEntity>(\"PROPERTY_NAME\")"]},{"anchor":"Setup-inverse-relationship","level":3,"type":"heading","text":"Setup inverse relationship"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Crush supports the equivalent feature of setting up an inverse relationship in "},{"type":"codeVoice","code":"xcdatamodel"},{"type":"text","text":" by using the property wrapper "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Inverse"},{"type":"text","text":". In most cases, you would want to create a two-way inverse using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/Inverse"},{"type":"text","text":", but for certain special cases, you may need to create a unidirectional inverse using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/UnidirectionalInverse"},{"type":"text","text":" property wrapper."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ ChildEntity","@Inverse(\\.children)","var parent = Relation.ToOne<ParentEntity>(\"parent\")","","\/\/ ParentEntity","var children = Relation.ToMany<ChildEntity>(\"children\")"]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You only need to setup inverse relationship on either side of the relationship."}]}],"type":"aside","name":"Important"},{"anchor":"Advanced-property-features","level":2,"type":"heading","text":"Advanced property features"},{"anchor":"Derived-Attribute","level":3,"type":"heading","text":"Derived Attribute"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/DerivedAttribute"},{"type":"text","text":" is a powerful feature of CoreData that allows you to define a property computed from other properties. You can declare a derived bool property as shown below."}]},{"type":"codeListing","syntax":"swift","code":["let derivedProperty = Derived.Bool(\"derivedProperty\", from: \"PROPERTY_NAME\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are also some pre-defined functions that can be used as the value of the derived property."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ This declares a derived date property named \"modifiedDate\" that will be updated on save.","let modifiedDate = Derived.Date(\"modifiedDate\", derivation: .dateNow())","","\/\/ This declares a derived int16 property named \"entitiesCount\" that will store the count of entities.","let entitiesCount = Derived.Int16(\"entitiesCount\", from: \\.toManyEntities, aggregation: .count)","","\/\/ This declares a derived int16 property named \"entitiesSum\" that will store the sum of entities.","let entitiesSum = Derived.Int16(\"entitiesSum\", from: \\.toManyEntities, property: \\.integerValue, aggregation: .sum)"]},{"anchor":"Fetched-Property","level":3,"type":"heading","text":"Fetched Property"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Crush\/documentation\/Crush\/FetchedProperty"},{"type":"text","text":" is a powerful feature provided by CoreData. It allows you to fetch entities based on a pre-defined predicate by accessing this property. Here is an example of declaring a fetched property:"}]},{"type":"codeListing","syntax":"swift","code":["let fetchedProperty = Fetched<TargetEntity>(\"fetchedProperty\") { ","    $0.where(\\.boolValue == true)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It also provides a convenient way to fetch entities based on the fetch source property. In the following example, entities with the same boolValue as the fetch source will be fetched:"}]},{"type":"codeListing","syntax":"swift","code":["let fetchedProperty = Fetched<TargetEntity>(\"fetchedProperty\") {","    $0.where(\\.boolValue == FetchSource.boolValue)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/crush\/manageproperties"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Crush\/documentation\/Crush\/ManageProperties","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Configure properties within an entity in a declarative way."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Manage Properties","role":"article","modules":[{"name":"Crush"}]},"hierarchy":{"paths":[["doc:\/\/Crush\/documentation\/Crush"]]},"seeAlsoSections":[{"title":"Managing data schema","identifiers":["doc:\/\/Crush\/documentation\/Crush\/PropertyModifier","doc:\/\/Crush\/documentation\/Crush\/VersioningAndMigration"],"generated":true}],"references":{"doc://Crush/documentation/Crush/DerivedAttribute":{"role":"symbol","title":"DerivedAttribute","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivedAttribute"}],"abstract":[{"type":"text","text":"A class representing a derived attribute for an entity."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/DerivedAttribute","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DerivedAttribute"}],"url":"\/documentation\/crush\/derivedattribute"},"doc://Crush/documentation/Crush/Inverse":{"role":"symbol","title":"Inverse","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Inverse"}],"abstract":[{"type":"text","text":"A property wrapper that specifies the inverse relationship for a relationship property."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Inverse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Inverse"}],"url":"\/documentation\/crush\/inverse"},"doc://Crush/documentation/Crush/Value":{"role":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[{"type":"text","text":"This is a namespace listing all supported attribute types."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Value","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Value"}],"url":"\/documentation\/crush\/value"},"doc://Crush/documentation/Crush/VersioningAndMigration":{"role":"article","title":"Versioning and Migration","abstract":[{"type":"text","text":"This article introduces how to manage model schema and data migration in "},{"type":"codeVoice","code":"Crush"},{"type":"text","text":"."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/VersioningAndMigration","kind":"article","type":"topic","url":"\/documentation\/crush\/versioningandmigration"},"doc://Crush/documentation/Crush/UnidirectionalInverse":{"role":"symbol","title":"UnidirectionalInverse","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnidirectionalInverse"}],"abstract":[{"type":"text","text":"A property wrapper that specifies a unidirectional inverse relationship for a relationship property."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/UnidirectionalInverse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnidirectionalInverse"}],"url":"\/documentation\/crush\/unidirectionalinverse"},"doc://Crush/documentation/Crush/FetchedProperty":{"role":"symbol","title":"FetchedProperty","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FetchedProperty"}],"abstract":[],"identifier":"doc:\/\/Crush\/documentation\/Crush\/FetchedProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FetchedProperty"}],"url":"\/documentation\/crush\/fetchedproperty"},"doc://Crush/documentation/Crush":{"role":"collection","title":"Crush","abstract":[{"type":"text","text":"Enhance the development experience with CoreData by providing greater type-safety and intuitive functionality"}],"identifier":"doc:\/\/Crush\/documentation\/Crush","kind":"symbol","type":"topic","url":"\/documentation\/crush"},"doc://Crush/documentation/Crush/PropertyModifier":{"role":"article","title":"Property Modifier","abstract":[{"type":"text","text":"Crush provides multiple ways to modify the properties of an entity. This helps you separate concerns and configure a property by composition."}],"identifier":"doc:\/\/Crush\/documentation\/Crush\/PropertyModifier","kind":"article","type":"topic","url":"\/documentation\/crush\/propertymodifier"},"doc://Crush/documentation/Crush/Relation":{"role":"symbol","title":"Relation","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Relation"}],"abstract":[],"identifier":"doc:\/\/Crush\/documentation\/Crush\/Relation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Relation"}],"url":"\/documentation\/crush\/relation"}}}